@model GestorAutonomo.Models.CategoriaProduto;

@{

    ViewData["Title"] = ViewBag.Crud.Titulo;
}

@await Component.InvokeAsync("CRUD")

<form method="post" id="@String.Concat("frm_manutencao_",ViewBag.Crud.Operacao).ToLower()" asp-action="Manutencao">

    <input type="hidden" name="operacao" value="@ViewBag.Crud.Operacao">



    @if (ViewBag.Crud.Operacao != Opcoes.Create)
    {
        <input type="hidden" asp-for="Id" />
    }


    <div class="form-group">
        <label asp-for="Descricao"></label>

        @if (ViewBag.Crud.Operacao == Opcoes.Read || ViewBag.Crud.Operacao == Opcoes.Delete)
        {
            <input asp-for="Descricao" class="form-control" placeholder="Digite a Descrição da Categoria" disabled="disabled">
        }
        else
        {
            <input asp-for="Descricao" class="form-control" placeholder="Digite a Descrição da Categoria">
        }

        <span asp-validation-for="Descricao" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label asp-for="CategoriaPaiId"></label>
        @if (ViewBag.Crud.Operacao == Opcoes.Read || ViewBag.Crud.Operacao == Opcoes.Delete)
        {
            <select asp-for="CategoriaPaiId" class="form-control" asp-items="@ViewBag.Categorias" disabled="disabled">
                <option value="">Selecione a Categoria</option>
            </select>

        }
        else
        {
            <select asp-for="CategoriaPaiId" class="form-control" asp-items="@ViewBag.Categorias">
                <option value="">Selecione a Categoria</option>
            </select>

        }
        <span asp-validation-for="CategoriaPaiId" class="text-danger"></span>
    </div>


    @await Component.InvokeAsync("CRUD_Acao")

</form>