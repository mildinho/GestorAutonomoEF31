// <auto-generated />
using System;
using GestorAutonomo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestorAutonomo.Migrations
{
    [DbContext(typeof(GestorAutonomoContext))]
    partial class GestorAutonomoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestorAutonomo.Models.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CS_BANCO");
                });

            modelBuilder.Entity("GestorAutonomo.Models.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategoriaPaiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaPaiId");

                    b.ToTable("CS_CATEGORIAPRODUTO");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Duplicata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("Abatimento")
                        .HasColumnType("double");

                    b.Property<double?>("Acrescimo")
                        .HasColumnType("double");

                    b.Property<int>("BancoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Emissao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Pagamento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Registro_Banco")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Vencimento")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("Documento")
                        .HasColumnType("double");

                    b.Property<string>("Historico")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nosso_Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ParceiroId")
                        .HasColumnType("int");

                    b.Property<double>("Parcela")
                        .HasColumnType("double");

                    b.Property<string>("Remessa_Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TipoDuplicata")
                        .HasColumnType("int");

                    b.Property<double?>("Valor")
                        .HasColumnType("double");

                    b.Property<double?>("Valor_Pago")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("ParceiroId");

                    b.ToTable("CS_DUPLICATA");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CEP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("CNPJ_CPF")
                        .HasColumnType("double");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailComercial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailFinanceiro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailGerencial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fantasia")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TelefoneComercial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TelefoneFinanceiro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TelefonePrincipal")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UFId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UFId");

                    b.ToTable("CS_EMPRESA");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Caminho")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CS_IMAGEM");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("CS_LOGIN");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Parceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CEP")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("CNPJ_CPF")
                        .HasColumnType("double");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EmailNFE")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Fantasia")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Fornecedor")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone01")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone02")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UFId")
                        .HasColumnType("int");

                    b.Property<int>("Vendedor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UFId");

                    b.ToTable("CS_PARCEIRO");
                });

            modelBuilder.Entity("GestorAutonomo.Models.PontosEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CS_PONTOESTOQUE");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Altura")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Comprimento")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Largura")
                        .HasColumnType("int");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<double?>("PrecoCusto")
                        .HasColumnType("double");

                    b.Property<double?>("PrecoMedio")
                        .HasColumnType("double");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProdutoId");

                    b.ToTable("CS_PRODUTO");
                });

            modelBuilder.Entity("GestorAutonomo.Models.ProdutoSaldo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PontosEstoqueId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<double>("Reserva")
                        .HasColumnType("double");

                    b.Property<double>("Saldo")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("PontosEstoqueId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CS_PRODUTOSALDO");
                });

            modelBuilder.Entity("GestorAutonomo.Models.UF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data_Alteracao")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Data_Cadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("CS_UF");
                });

            modelBuilder.Entity("GestorAutonomo.Models.CategoriaProduto", b =>
                {
                    b.HasOne("GestorAutonomo.Models.CategoriaProduto", "CategoriaPai")
                        .WithMany()
                        .HasForeignKey("CategoriaPaiId");
                });

            modelBuilder.Entity("GestorAutonomo.Models.Duplicata", b =>
                {
                    b.HasOne("GestorAutonomo.Models.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorAutonomo.Models.Parceiro", "Parceiro")
                        .WithMany()
                        .HasForeignKey("ParceiroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorAutonomo.Models.Empresa", b =>
                {
                    b.HasOne("GestorAutonomo.Models.UF", "UF")
                        .WithMany()
                        .HasForeignKey("UFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorAutonomo.Models.Imagem", b =>
                {
                    b.HasOne("GestorAutonomo.Models.Produto", "Produto")
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorAutonomo.Models.Parceiro", b =>
                {
                    b.HasOne("GestorAutonomo.Models.UF", "UF")
                        .WithMany()
                        .HasForeignKey("UFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorAutonomo.Models.Produto", b =>
                {
                    b.HasOne("GestorAutonomo.Models.CategoriaProduto", "CategoriaProduto")
                        .WithMany()
                        .HasForeignKey("CategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestorAutonomo.Models.ProdutoSaldo", b =>
                {
                    b.HasOne("GestorAutonomo.Models.PontosEstoque", "PontosEstoque")
                        .WithMany()
                        .HasForeignKey("PontosEstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorAutonomo.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
